{"ast":null,"code":"var _jsxFileName = \"/Users/dashka_vishenka/Desktop/react_static-list-of-posts/src/PostList.js\";\nimport React from \"react\";\nimport Post from \"./Post\";\nimport User from \"./User\";\nimport CommentList from \"./CommentList\";\n\nclass PostList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.sortPosts = (posts, sortField) => {\n      const callbackMap = {\n        title: (a, b) => a.title.localCompare(b.title),\n        body: (a, b) => a.body.localCompare(b.body)\n      };\n    };\n\n    this.findUser = userId => {\n      return this.props.users.find(user => user.id === userId);\n    };\n\n    this.findComments = postId => {\n      return this.props.comments.filter(comment => comment.postId === postId);\n    };\n\n    this.state = {\n      posts: this.props.posts,\n      comments: this.props.comments,\n      sortField: \"title\"\n    };\n\n    this.handleSort = sortField => {\n      this.setState({\n        sortField\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Post Title\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Post Body\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Authors data\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Comment list\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.props.posts.map(post => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Post, {\n      key: post.id,\n      post: post,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(User, {\n      user: this.findUser(post.userId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(CommentList, {\n      postId: post.id,\n      comments: this.findComments(post.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default PostList;","map":{"version":3,"sources":["/Users/dashka_vishenka/Desktop/react_static-list-of-posts/src/PostList.js"],"names":["React","Post","User","CommentList","PostList","Component","constructor","props","sortPosts","posts","sortField","callbackMap","title","a","b","localCompare","body","findUser","userId","users","find","user","id","findComments","postId","comments","filter","comment","state","handleSort","setState","render","map","post"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAcnBC,SAdmB,GAcP,CAACC,KAAD,EAAQC,SAAR,KAAsB;AAChC,YAAMC,WAAW,GAAG;AAClBC,QAAAA,KAAK,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACD,KAAF,CAAQG,YAAR,CAAqBD,CAAC,CAACF,KAAvB,CADC;AAElBI,QAAAA,IAAI,EAAE,CAACH,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACG,IAAF,CAAOD,YAAP,CAAoBD,CAAC,CAACE,IAAtB;AAFE,OAApB;AAID,KAnBkB;;AAAA,SAqBnBC,QArBmB,GAqBRC,MAAM,IAAI;AACnB,aAAO,KAAKX,KAAL,CAAWY,KAAX,CAAiBC,IAAjB,CAAsBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,MAA1C,CAAP;AACD,KAvBkB;;AAAA,SAyBnBK,YAzBmB,GAyBJC,MAAM,IAAI;AACvB,aAAO,KAAKjB,KAAL,CAAWkB,QAAX,CAAoBC,MAApB,CAA2BC,OAAO,IAAIA,OAAO,CAACH,MAAR,KAAmBA,MAAzD,CAAP;AACD,KA3BkB;;AAGjB,SAAKI,KAAL,GAAa;AACXnB,MAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KADP;AAEXgB,MAAAA,QAAQ,EAAE,KAAKlB,KAAL,CAAWkB,QAFV;AAGXf,MAAAA,SAAS,EAAE;AAHA,KAAb;;AAMA,SAAKmB,UAAL,GAAkBnB,SAAS,IAAI;AAC7B,WAAKoB,QAAL,CAAc;AAAEpB,QAAAA;AAAF,OAAd;AACD,KAFD;AAGD;;AAiBDqB,EAAAA,MAAM,GAAG;AACP,WACE;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,CADF,CADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKxB,KAAL,CAAWE,KAAX,CAAiBuB,GAAjB,CAAqBC,IAAI,IACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACX,EAAhB;AAAoB,MAAA,IAAI,EAAEW,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE,KAAKhB,QAAL,CAAcgB,IAAI,CAACf,MAAnB,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,WAAD;AACE,MAAA,MAAM,EAAEe,IAAI,CAACX,EADf;AAEE,MAAA,QAAQ,EAAE,KAAKC,YAAL,CAAkBU,IAAI,CAACX,EAAvB,CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADD,CADH,CATF,CADF;AAwBD;;AAvDoC;;AA0DvC,eAAelB,QAAf","sourcesContent":["import React from \"react\";\n\nimport Post from \"./Post\";\nimport User from \"./User\";\nimport CommentList from \"./CommentList\";\n\nclass PostList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      posts: this.props.posts,\n      comments: this.props.comments,\n      sortField: \"title\"\n    };\n\n    this.handleSort = sortField => {\n      this.setState({ sortField });\n    };\n  }\n\n  sortPosts = (posts, sortField) => {\n    const callbackMap = {\n      title: (a, b) => a.title.localCompare(b.title),\n      body: (a, b) => a.body.localCompare(b.body)\n    };\n  };\n\n  findUser = userId => {\n    return this.props.users.find(user => user.id === userId);\n  };\n\n  findComments = postId => {\n    return this.props.comments.filter(comment => comment.postId === postId);\n  };\n\n  render() {\n    return (\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>Post Title</th>\n            <th>Post Body</th>\n            <th>Authors data</th>\n            <th>Comment list</th>\n          </tr>\n        </thead>\n        <tbody>\n          {this.props.posts.map(post => (\n            <tr>\n              <Post key={post.id} post={post} />\n              <User user={this.findUser(post.userId)} />\n              <CommentList\n                postId={post.id}\n                comments={this.findComments(post.id)}\n              />\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default PostList;\n"]},"metadata":{},"sourceType":"module"}