{"ast":null,"code":"var _jsxFileName = \"/Users/dashka_vishenka/Desktop/react_static-list-of-posts/src/PostList.js\";\nimport React from \"react\";\nimport Post from \"./Post\";\nimport User from \"./User\";\nimport CommentList from \"./CommentList\";\n\nclass PostList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.findUser = userId => {\n      return this.props.users.find(user => user.id === userId);\n    };\n\n    this.findComments = postId => {\n      return this.props.comments.filter(comment => comment.postId === postId);\n    };\n\n    this.state = {\n      posts: this.props.posts,\n      comments: this.props.comments,\n      sortField: \"title\"\n    };\n\n    this.handleSort = sortField => {\n      this.setState({\n        sortField\n      });\n    };\n  }\n\n  sortPosts(posts, sortField) {\n    const callbackMap = {\n      title: (a, b) => a.title.localeCompare(b.title),\n      body: (a, b) => a.body.localeCompare(b.body)\n    };\n    const callback = callbackMap[sortField] || callbackMap.title;\n    return posts.sort(callback);\n  }\n\n  render() {\n    const _this$state = this.state,\n          posts = _this$state.posts,\n          sortField = _this$state.sortField;\n    const sortedPosts = this.sortPosts(posts, sortField);\n    return React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      onClick: () => this.handleSort(\"title\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Post Title\"), React.createElement(\"th\", {\n      onClick: () => this.handleSort(\"body\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Post Body\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Authors data\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Comment list\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, sortedPosts.map(post => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Post, {\n      key: post.id,\n      post: post,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(User, {\n      user: this.findUser(post.userId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(CommentList, {\n      postId: post.id,\n      comments: this.findComments(post.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default PostList;","map":{"version":3,"sources":["/Users/dashka_vishenka/Desktop/react_static-list-of-posts/src/PostList.js"],"names":["React","Post","User","CommentList","PostList","Component","constructor","props","findUser","userId","users","find","user","id","findComments","postId","comments","filter","comment","state","posts","sortField","handleSort","setState","sortPosts","callbackMap","title","a","b","localeCompare","body","callback","sort","render","sortedPosts","map","post"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport Post from \"./Post\";\nimport User from \"./User\";\nimport CommentList from \"./CommentList\";\n\nclass PostList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      posts: this.props.posts,\n      comments: this.props.comments,\n      sortField: \"title\"\n    };\n\n    this.handleSort = sortField => {\n      this.setState({ sortField });\n    };\n  }\n\n  sortPosts(posts, sortField) {\n    const callbackMap = {\n      title: (a, b) => a.title.localeCompare(b.title),\n      body: (a, b) => a.body.localeCompare(b.body)\n    };\n\n    const callback = callbackMap[sortField] || callbackMap.title;\n\n    return posts.sort(callback);\n  }\n\n  findUser = userId => {\n    return this.props.users.find(user => user.id === userId);\n  };\n\n  findComments = postId => {\n    return this.props.comments.filter(comment => comment.postId === postId);\n  };\n\n  render() {\n    const { posts, sortField } = this.state;\n    const sortedPosts = this.sortPosts(posts, sortField);\n    return (\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th onClick={() => this.handleSort(\"title\")}>Post Title</th>\n            <th onClick={() => this.handleSort(\"body\")}>Post Body</th>\n            <th>Authors data</th>\n            <th>Comment list</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sortedPosts.map(post => (\n            <tr>\n              <Post key={post.id} post={post} />\n              <User user={this.findUser(post.userId)} />\n              <CommentList\n                postId={post.id}\n                comments={this.findComments(post.id)}\n              />\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default PostList;\n"]},"metadata":{},"sourceType":"module"}